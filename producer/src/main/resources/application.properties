spring.application.name=kafka-producer
application.id=1

server.port=8081

spring.kafka.bootstrap-servers=localhost:9000,localhost:9001,localhost:9002

spring.kafka.producer.bootstrap-servers=localhost:9000,localhost:9001,localhost:9002
spring.kafka.producer.client-id=${spring.application.name}-${application.id}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=com.priyakdey.kafka.producer.serializer.ProductSerializer

# how many times the producer is going to retry before marking a message as failed
spring.kafka.producer.retries=2
# how many ms the producer is going to wait before making the next retry attempt
spring.kafka.producer.properties.retry.backoff.ms=1000

# recommended settings
# max time producer spends trying to send the message before marking it as failed
# spring.kafka.producer.properties.delivery.timeout.ms=120000
# delivery.timeout.ms >= linger.ms + request.timeout.ms
# the max time in ms, the producer waits and buffers data before sending a batch of messages.
# spring.kafka.producer.properties.linger.ms=0
# max time to wait for a response from the broker, after sending a message.
# spring.kafka.producer.properties.request.timeout.ms=0




logging.level.org.apache.kafka.clients.producer.ProducerConfig=OFF
#logging.level.org.apache.kafka.clients=DEBUG
#logging.level.org.springframework.kafka=DEBUG
